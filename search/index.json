[{"content":"小程序反编译 环境与工具 操作系统：Windows 11 23H2\n微信版本：3.9.10.19\nwxapkg：https://github.com/wux1an/wxapkg\nunveilr：https://github.com/junxiaqiao/unveilr-v2.0.0\n写在前面 Q：如何找到小程序文件位置？ A：在微信的设置找到文件路径，小程序文件位于 \\WeChat Files\\Applet\\。 Q：小程序目录下文件太多了，找不到要解包的小程序？ A：使用 wxapkg 的 scan 功能，联网状态下会获取小程序名称。或者删除目录下所有文件再打开一次小程序。\nwxapkg ⚠ 只支持 Windows 系统\n安装 从 Github Release 下载可执行文件，或者下载源码编译。\n使用 程序的使用说明。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 \u0026gt; .\\wxapkg.exe -h A tool to scan and decrypt wechat mini program Usage: wxapkg [command] Available Commands: help Help about any command scan Scan the wechat mini program unpack Decrypt wechat mini program Flags: --disable-beautify disable js,html,json beautify -h, --help help for wxapkg -v, --version version for wxapkg Use \u0026#34;wxapkg [command] --help\u0026#34; for more information about a command. 使用 scan 功能解包小程序。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 # scan 功能会扫描指定目录下所有的小程序，选择解包。 \u0026gt; .\\wxapkg.exe scan --help Scan the wechat mini program Usage: wxapkg scan [flags] Examples: wxapkg.exe scan -r \u0026#34;D:\\WeChat Files\\Applet\\wx12345678901234\u0026#34; # 扫描小程序文件所在路径 \u0026gt; .\\wxapkg.exe scan -r \u0026#34;D:\\WeChat Files\\Applet\u0026#34; # 打印目录下的小程序，使用上下按键选择，回车确认。 ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓ ┃ Name Developer Description ┃ ┃────────────────────────────────────────────────────────┃ ┃ 跳一跳 深圳市腾讯计算机系统有限公司 比比看，谁跳得更远 ┃ ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛ wxid: wx7c8d593b2c3a7703 Name: 跳一跳 Developer: 深圳市腾讯计算机系统有限公司 Description: 比比看，谁跳得更远 Location: D:\\WeChat Files\\Applet\\wx7c8d593b2c3a7703 Avatar: https://wx.qlogo.cn/mmhead/Q3auHgzwzM5GNaPCYMrxHaFLkh3kTduKFFbPlNmeHdkly2QlZLmtibQ/0 All information see \u0026#39;.\\wxid.json\u0026#39; enter unpack • ↑/k move up • ↓/j move down • q exit # 选中后开始解包。 [+] unpack root \u0026#39;D:\\WeChat Files\\Applet\\wx7c8d593b2c3a7703\u0026#39; with 30 threads [+] unpacked 185 files from \u0026#39;wx7c8d593b2c3a7703\\92\\__WITHOUT_MULTI_PLUGINCODE__.wxapkg\u0026#39; [+] all 185 files saved to \u0026#39;wx7c8d593b2c3a7703\u0026#39; [+] mini program detail info saved to \u0026#39;wx7c8d593b2c3a7703\\detail.json\u0026#39; [+] extension statistics: - .png 153 - .mp3 22 - .jpg 5 - .json 3 - .js 1 - .ttf 1 # 解包结果在当前目录下 wx 开头文件夹。 \u0026gt; ls .\\wx7c8d593b2c3a7703\\ Mode LastWriteTime Length Name ---- ------------- ------ ---- d---- 2024/1/1 11:11 92 -a--- 2024/1/1 11:11 302 detail.json 使用 unpack 功能解包小程序。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 # unpack 功能用于手动指定小程序和解包输出目录。 .\\wxapkg.exe unpack -h Decrypt wechat mini program Usage: wxapkg unpack [flags] Examples: wxapkg.exe unpack -o unpack -r \u0026#34;D:\\WeChat Files\\Applet\\wx12345678901234\u0026#34; Flags: -h, --help help for unpack -o, --output string the output path to save result (default \u0026#34;unpack\u0026#34;) -r, --root string the mini progress path you want to decrypt, see: C:\\Users\\Null\\Documents\\WeChat Files\\Applet\\wx00000000000000 -n, --thread int the thread number (default 30) Global Flags: --disable-beautify disable js,html,json beautify # 不指定输出路径，指定要解包的小程序。 \u0026gt; .\\wxapkg.exe unpack -r \u0026#34;D:\\WeChat Files\\Applet\\wx7c8d593b2c3a7703\\\u0026#34; [+] unpack root \u0026#39;D:\\WeChat Files\\Applet\\wx7c8d593b2c3a7703\\\u0026#39; with 30 threads [+] unpacked 185 files from \u0026#39;92\\__WITHOUT_MULTI_PLUGINCODE__.wxapkg\u0026#39; [+] all 185 files saved to \u0026#39;unpack\u0026#39; [+] extension statistics: - .png 153 - .mp3 22 - .jpg 5 - .json 3 - .ttf 1 - .js 1 # 不指定输出路径的情况下，默认解压到当前目录的 unpack 文件夹。 \u0026gt; ls .\\unpack\\ Mode LastWriteTime Length Name ---- ------------- ------ ---- d---- 2024/1/1 11:11 92 # 可以使用 -o 参数指定输出路径。 查看解包结果。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 # 解包结果没有小程序原始工程文件结构，关键代码在 game.js 文件。 \u0026gt; tree .\\unpack\\92\\ /f D:\\WXAPKG\\UNPACK\\92 │ app-config.json │ game.js │ package-lock.json │ package.json │ └─res │ 0.png │ 1.png │ ...... ├─2d │ 555.png │ auth.png │ ...... └─auth rank_tip.png refresh.png unveilr ⚠新版功能更丰富，但转为闭源，订阅制收费。本文使用 2.0 免费版本。\n安装 付费使用最新版，免费使用流传最后一版免费版本。\n使用 程序功能帮助。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 \u0026gt; .\\unveilr.exe -h Usage: unveilr [wx] [options] Options: -v, --version output the version number -l, --log-level \u0026lt;level\u0026gt; Set log level (choices: \u0026#34;debug\u0026#34;, \u0026#34;info\u0026#34;, \u0026#34;warn\u0026#34;, \u0026#34;error\u0026#34;, default: \u0026#34;info\u0026#34;) -h, --help display help for command Commands: wx [options] \u0026lt;packages...\u0026gt; Decompile the WeChat applet help [command] display help for command Example: $ unveilr /path/to/wxapkg/dir/ $ unveilr 1.wxapkg 2.wxapkg 3.wxapkg ... $ unveilr wx /path/to/wxapkg/dir/ Specify wx subcommand $ unveilr wx 1.wxapkg 2.wxapkg 3.wxapkg ... Specify wx subcommand $ unveilr wx -h Show wx help info 解包使用。\n1 2 3 4 5 6 # 提供小程序包 wxapkg 所在路径直接解包，结果在目标小程序同路径下（\\WeChat Files\\Applet\\wx000\\01\\）。 # 允许多个包输入或者一个路径。 \u0026gt; .\\unveilr.exe \u0026#34;D:\\WeChat Files\\Applet\\wx7c8d593b2c3a7703\\92\\\u0026#34; [INFO] 00:29:08 \u0026lt;Core\u0026gt; From D:\\WeChat Files\\Applet\\wx7c8d593b2c3a7703\\92\\__WITHOUT_MULTI_PLUGINCODE__.wxapkg detected wxAppId: wx7c8d593b2c3a7703 [INFO] 00:29:08 \u0026lt;Core\u0026gt; The package D:\\WeChat Files\\Applet\\wx7c8d593b2c3a7703\\92\\__WITHOUT_MULTI_PLUGINCODE__.wxapkg type is: [GAME] [INFO] 00:29:10 \u0026lt;Bucket\u0026gt; Storage has written 338 files wx 子命令支持更多操作。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 \u0026gt; .\\unveilr.exe wx -h Usage: unveilr wx [options] \u0026lt;packages...\u0026gt; Decompile the WeChat applet Arguments: packages Set package path, could be a file, directory or multiple files Options: -i, --appid \u0026lt;appid\u0026gt; Set wxAppId, not provided will try to fetch from path -f, --format Enable format code --no-clear-decompile Retain decompiling residual files --no-clear-save The path to be saved will not be cleared -p, --no-parse Only extract files, do not parse -d, --depth \u0026lt;depth\u0026gt; Set read-depth (default: 1) -o, --output \u0026lt;path\u0026gt; Set output path, default: main package whit out --clear-output Empty the specified output folder -h, --help display help for command # 解包小程序并输出到 .\\tyt，同时格式化输出得到小程序原有结构。 \u0026gt; .\\unveilr.exe wx \u0026#34;D:\\WeChat Files\\Applet\\wx7c8d593b2c3a7703\\92\\\u0026#34; -o .\\tyt -f [WARN] 00:38:52 \u0026lt;Bucket\u0026gt; Turning on code formatting can slow down some operations [INFO] 00:38:52 \u0026lt;Core\u0026gt; From D:\\WeChat Files\\Applet\\wx7c8d593b2c3a7703\\92\\__WITHOUT_MULTI_PLUGINCODE__.wxapkg detected wxAppId: wx7c8d593b2c3a7703 [INFO] 00:38:52 \u0026lt;Core\u0026gt; The package D:\\WeChat Files\\Applet\\wx7c8d593b2c3a7703\\92\\__WITHOUT_MULTI_PLUGINCODE__.wxapkg type is: [GAME] [INFO] 00:38:57 \u0026lt;Bucket\u0026gt; Storage has written 338 files # 解包结果有小程序原始工程文件结构，可以看到文件排布。 \u0026gt; tree .\\tyt\\ /f D:\\WXAPK\\UNVEILR\\TYT │ game.js │ game.json │ package-lock.json │ package.json │ ├─@babel │ └─runtime │ └─helpers │ Arrayincludes.js │ ...... │ ├─js │ │ block.js │ │ ...... │ │ │ ├─control │ │ battleCtrl.js │ │ ...... │ │ │ │ ...... │ │ │ └─util │ common.js │ encryption.js │ forceUpdate.js │ log.js │ util.js │ └─res │ ...... │ └─auth rank_tip.png refresh.png ","date":"2024-05-14T00:57:01+08:00","permalink":"https://gyunlyun.github.io/p/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E8%A7%A3%E5%8C%85/","title":"微信小程序解包"},{"content":"使用virtualenvwrapper-win创建Python虚拟环境 基于frida的工具对frida版本要求不同，为每个工具创建自己的虚拟环境，安装不同版本的frida。\n操作环境 操作系统：Windows11 22H2 处理器：Intel(R) Core(TM) i9-13900H Python版本：Python 3.12.0 pip版本：pip 23.3.1\n安装virtualenvwrapper 使用pip安装virtualenvwrapper-win：pip install virtualenvwrapper-win -i https://pypi.tuna.tsinghua.edu.cn/simple。\n1 2 3 PS C:\\Users\\null\u0026gt; pip install virtualenvwrapper-win -i https://pypi.tuna.tsinghua.edu.cn/simple ...... Requirement already satisfied: platformdirs\u0026lt;4,\u0026gt;=3.9.1 in c:\\users\\null\\appdata\\local\\programs\\python\\python312\\lib\\site-packages (from virtualenv-\u0026gt;virtualenvwrapper-win) (3.11.0) 1 2 3 4 5 6 7 8 9 10 11 12 PS C:\\Users\\null\u0026gt; virtualenvwrapper virtualenvwrapper is a set of extensions to Ian Bicking\u0026#39;s virtualenv tool. The extensions include wrappers for creating and deleting virtual environments and otherwise managing your development workflow, making it easier to work on more than one project at a time without introducing conflicts in their dependencies. virtualenvwrapper-win is a port of Dough Hellman\u0026#39;s virtualenvwrapper to Windows batch scripts. ...... 设置环境变量（可选） 系统属性设置\u0026ndash;系统变量\u0026ndash;添加 WORKON_HOME环境变量到你指定的文件夹（例如：D:\\virtualenv），不设置的话创建的虚拟环境文件夹会放到C盘用户目录下的 Envs文件夹下。\n创建虚拟环境 创建虚拟环境test：mkvirtualenv test。\n1 2 3 4 5 6 PS C:\\Users\\null\u0026gt; mkvirtualenv test created virtual environment CPython3.12.0.final.0-64 in 1970ms creator CPython3Windows(dest=C:\\Users\\null\\Envs\\test, clear=False, no_vcs_ignore=False, global=False) seeder FromAppData(download=False, pip=bundle, via=copy, app_data_dir=C:\\Users\\null\\AppData\\Local\\pypa\\virtualenv) added seed packages: pip==23.3.1 activators BashActivator,BatchActivator,FishActivator,NushellActivator,PowerShellActivator,PythonActivator 在虚拟环境中安装/使用（基于）Frida的的工具 切换到创建的虚拟环境test：workon test，不能workon的手动执行激活脚本。\n1 2 3 4 5 6 7 8 9 10 11 PS C:\\Users\\null\u0026gt; workon test\t#切换失败 PS C:\\Users\\null\u0026gt; lsvirtualenv\t#列出所有虚拟环境 dir /b /ad \u0026#34;C:\\Users\\null\\Envs\u0026#34; ============================================================================== camille objection test PS C:\\Users\\null\u0026gt; C:\\Users\\null\\Envs\\test\\Scripts\\activate.ps1\t#手动激活脚本 (test) PS C:\\Users\\null\u0026gt;\t#激活成功 安装frida：pip install frida-tools -i https://pypi.tuna.tsinghua.edu.cn/simple。\n1 2 3 4 5 (test) PS C:\\Users\\null\u0026gt; pip install frida-tools -i https://pypi.tuna.tsinghua.edu.cn/simple ...... Successfully installed colorama-0.4.6 frida-16.1.8 frida-tools-12.3.0 prompt-toolkit-3.0.41 pygments-2.17.2 wcwidth-0.2.12 (test) PS C:\\Users\\null\u0026gt; frida --version 16.1.8 使用基于frida的工具：pip install -r requirements.txt 。\n参考文档\n","date":"2023-12-17T20:23:48+08:00","permalink":"https://gyunlyun.github.io/p/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8-virtualenvwrapper-win/","title":"如何使用 Virtualenvwrapper-Win"}]